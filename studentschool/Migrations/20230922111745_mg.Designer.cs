// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using students.Repositories;

#nullable disable

namespace studentschool.Migrations
{
    [DbContext(typeof(RepositoryContext))]
    [Migration("20230922111745_mg")]
    partial class mg
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("studentschool.Models.Classes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("SchoolId")
                        .HasColumnType("int");

                    b.Property<string>("SinifAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SchoolId");

                    b.ToTable("Classes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            SinifAdi = "12-A"
                        });
                });

            modelBuilder.Entity("studentschool.Models.Lesson", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DersAdi")
                        .HasColumnType("int");

                    b.Property<int?>("SchoolId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SchoolId");

                    b.ToTable("Lessons");
                });

            modelBuilder.Entity("studentschool.Models.School", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Il")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ilce")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OkulAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Schools");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Il = "Istanbul",
                            Ilce = "Maltepe",
                            OkulAdi = "FSM Lisesi"
                        });
                });

            modelBuilder.Entity("studentschool.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ClassesId")
                        .HasColumnType("int");

                    b.Property<int>("SchoolId")
                        .HasColumnType("int");

                    b.Property<int>("Sinif")
                        .HasColumnType("int");

                    b.Property<string>("Soyad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClassesId");

                    b.HasIndex("SchoolId");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Ad = "Muhammed",
                            ClassesId = 1,
                            SchoolId = 1,
                            Sinif = 12,
                            Soyad = "Akıncı"
                        },
                        new
                        {
                            Id = 2,
                            Ad = "Arda",
                            ClassesId = 1,
                            SchoolId = 1,
                            Sinif = 11,
                            Soyad = "Tekin"
                        },
                        new
                        {
                            Id = 3,
                            Ad = "Ahmet",
                            ClassesId = 1,
                            SchoolId = 1,
                            Sinif = 14,
                            Soyad = "Sülü"
                        });
                });

            modelBuilder.Entity("studentschool.Models.Teacher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Isim")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LessonId")
                        .HasColumnType("int");

                    b.Property<int>("SchoolId")
                        .HasColumnType("int");

                    b.Property<string>("Soyisim")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LessonId");

                    b.HasIndex("SchoolId");

                    b.ToTable("Teachers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Isim = "Yunus",
                            SchoolId = 1,
                            Soyisim = "Temel"
                        });
                });

            modelBuilder.Entity("studentschool.Models.Classes", b =>
                {
                    b.HasOne("studentschool.Models.School", null)
                        .WithMany("Classes")
                        .HasForeignKey("SchoolId");
                });

            modelBuilder.Entity("studentschool.Models.Lesson", b =>
                {
                    b.HasOne("studentschool.Models.School", null)
                        .WithMany("Lessons")
                        .HasForeignKey("SchoolId");
                });

            modelBuilder.Entity("studentschool.Models.Student", b =>
                {
                    b.HasOne("studentschool.Models.Classes", "Classes")
                        .WithMany("Students")
                        .HasForeignKey("ClassesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("studentschool.Models.School", "School")
                        .WithMany("Students")
                        .HasForeignKey("SchoolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Classes");

                    b.Navigation("School");
                });

            modelBuilder.Entity("studentschool.Models.Teacher", b =>
                {
                    b.HasOne("studentschool.Models.Lesson", null)
                        .WithMany("Teachers")
                        .HasForeignKey("LessonId");

                    b.HasOne("studentschool.Models.School", "School")
                        .WithMany("Teachers")
                        .HasForeignKey("SchoolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("School");
                });

            modelBuilder.Entity("studentschool.Models.Classes", b =>
                {
                    b.Navigation("Students");
                });

            modelBuilder.Entity("studentschool.Models.Lesson", b =>
                {
                    b.Navigation("Teachers");
                });

            modelBuilder.Entity("studentschool.Models.School", b =>
                {
                    b.Navigation("Classes");

                    b.Navigation("Lessons");

                    b.Navigation("Students");

                    b.Navigation("Teachers");
                });
#pragma warning restore 612, 618
        }
    }
}
